# Configura el entorno
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['config', 'set', 'project', 'desafio-tripulaciones']

# Construye la imagen de la aplicaciÃ³n web (etiqueta latest)
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/desafio-tripulaciones/tripulaciones-data:latest', './src']

# Sube la imagen al Container Registry (etiqueta latest)
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/desafio-tripulaciones/tripulaciones-data:latest']

# Implementa la imagen en Cloud Run (etiqueta latest)
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: bash
  args:
    - '-c'
    - >
      gcloud run deploy tripulaciones-data \
        --image=gcr.io/desafio-tripulaciones/tripulaciones-data:latest \
        --region=europe-west1 \
        --platform=managed \
        --allow-unauthenticated \
        --update-env-vars PG_USER=$$PG_USER \
        --update-env-vars PG_HOST=$$PG_HOST \
        --update-env-vars PG_DATABASE=$$PG_DATABASE \
        --update-env-vars PG_PASSWORD=$$PG_PASSWORD \
        --update-env-vars API_KEY_OPENAI=$$API_KEY_OPENAI \
        --update-env-vars API_KEY_OPENWEATHERMAP=$$API_KEY_OPENWEATHERMAP \
        --update-env-vars FLASK_RUN_PORT=$$FLASK_RUN_PORT \
        --update-env-vars FLASK_RUN_HOST=$$FLASK_RUN_HOST
  secretEnv:
    - PG_USER
    - PG_HOST
    - PG_DATABASE
    - PG_PASSWORD
    - API_KEY_OPENAI
    - API_KEY_OPENWEATHERMAP
    - FLASK_RUN_PORT
    - FLASK_RUN_HOST
