# Configura el entorno
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['config', 'set', 'project', 'desafio-tripulaciones']

# Construye la imagen de la aplicaci√≥n web (etiqueta latest)
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/desafio-tripulaciones/tripulaciones-data:latest', './src']

# Sube la imagen al Container Registry (etiqueta latest)
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/desafio-tripulaciones/tripulaciones-data:latest']

# Implementa la imagen en Cloud Run (etiqueta latest)
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: bash
  args: [
    "-c",
    "gcloud run deploy tripulaciones-data
      --image=gcr.io/desafio-tripulaciones/tripulaciones-data:latest
      --region=europe-west1
      --platform=managed
      --allow-unauthenticated
      --update-env-vars FLASK_RUN_PORT=5001,FLASK_RUN_HOST=0.0.0.0,API_KEY_OPENAI=$$API_KEY_OPENAI,API_KEY_OPENWEATHERMAP=$$API_KEY_OPENWEATHERMAP,PG_USER=$$PG_USER,PG_HOST=$$PG_HOST,PG_DATABASE=$$PG_DATABASE,PG_PASSWORD=$$PG_PASSWORD"
  ]
  secretEnv: [
    'API_KEY_OPENAI', 'API_KEY_OPENWEATHERMAP', 'PG_USER', 'PG_HOST', 'PG_DATABASE', 'PG_PASSWORD'
  ]
availableSecrets:
  secretManager:
    - versionName: projects/795308822384/secrets/API_KEY_OPENAI/versions/latest
      env: API_KEY_OPENAI
    - versionName: projects/795308822384/secrets/API_KEY_OPENWEATHERMAP/versions/latest
      env: API_KEY_OPENWEATHERMAP
    - versionName: projects/795308822384/secrets/PG_USER/versions/latest
      env: PG_USER
    - versionName: projects/795308822384/secrets/PG_HOST/versions/latest
      env: PG_HOST
    - versionName: projects/795308822384/secrets/PG_DATABASE/versions/latest
      env: PG_DATABASE
    - versionName: projects/795308822384/secrets/PG_PASSWORD/versions/latest
      env: PG_PASSWORD